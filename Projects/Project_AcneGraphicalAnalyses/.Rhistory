graph_label_size=2)
plot_cells(cds,
color_cells_by = "pseudotime",
label_cell_groups=FALSE,
label_leaves=TRUE,
label_branch_points=TRUE,
graph_label_size=1.5)
plot_cells(cds,
color_cells_by = "celltype",
label_groups_by_cluster=FALSE,
label_leaves=FALSE,
label_branch_points=FALSE,
graph_label_size=2)
plot_cells(cds,
color_cells_by = "pseudotime",
label_cell_groups=FALSE,
label_leaves=TRUE,
label_branch_points=TRUE,
graph_label_size=1.5)
cds <- order_cells(cds)
plot_cells(cds, color_cells_by = "pseudotime", label_branch_points = FALSE, label_leaves = FALSE)
plot_cells(cds, color_cells_by = "pseudotime", label_groups_by_cluster = T,
label_branch_points = T, label_roots = F, label_leaves = F)
plot_cells(cds,
genes = c("TIGIT", "LAG3", "PDCD1"),
label_cell_groups = FALSE,
show_trajectory_graph = FALSE,
min_expr = 3)
"IL17A" %in% row.names(rowData(cds)) # output is TRUE...
# had to manually specify gene name and short name column
rowData(cds)$gene_name <- rownames(cds)
rowData(cds)$gene_short_name <- rowData(cds)$gene_name
plot_cells(cds,
genes = c("TIGIT", "LAG3", "PDCD1"),
label_cell_groups = FALSE,
show_trajectory_graph = FALSE,
min_expr = 3)
plot_cells(cds,
color_cells_by = "celltype",
label_groups_by_cluster=FALSE,
label_leaves=FALSE,
label_branch_points=FALSE,
graph_label_size=2)
plot_cells(cds,
color_cells_by = "pseudotime",
label_cell_groups=FALSE,
label_leaves=TRUE,
label_branch_points=TRUE,
graph_label_size=1.5)
plot_cells(cds,
color_cells_by = "celltype",
label_groups_by_cluster=FALSE,
label_leaves=FALSE,
label_branch_points=FALSE,
graph_label_size=2)
plot_cells(cds,
color_cells_by = "pseudotime",
label_cell_groups=FALSE,
label_leaves=TRUE,
label_branch_points=TRUE,
graph_label_size=1.5)
View(cds)
view(cds)
view(cds)
library(Seurat)
view(cds)
rownames(cds)
colnames(cds)
rownames(cds)
library(velocityto.R)
install.packages("velocityto.R")
install_github("velocyto-team/velocyto.R")
library(devtools)
install_github("velocyto-team/velocyto.R")
install.packages("remotes")
install.packages("remotes")
library(remotes)
remotes::install_github("velocyto-team/velocyto.R")
conda_list()
use_condaenv("sgcell")
scv <- import("scvelo")
plot_cells(cds,
color_cells_by = "pseudotime",
label_groups_by_cluster = T,
label_branch_points = T,
label_roots = F,
label_leaves = F)
plot_cells(cds,
color_cells_by = "cell.type",
label_groups_by_cluster = T,
label_branch_points = T,
label_roots = F,
label_leaves = F)
plot_cells(cds,
color_cells_by = "celltype",
label_groups_by_cluster = T,
label_branch_points = T,
label_roots = F,
label_leaves = F)
plot_cells(cds,
color_cells_by = "celltype",
label_groups_by_cluster = T,
label_branch_points = T,
label_leaves = F
)
plot_cells(cds,
color_cells_by = "celltype",
label_groups_by_cluster = T,
label_branch_points = T,
label_roots = F,
label_leaves = F
)
plot_cells(cds,
color_cells_by = "pseudotime",
label_groups_by_cluster = T,
label_branch_points = T,
label_roots = F,
label_leaves = F
)
cds <- order_cells(cds)
plot_cells(cds,
color_cells_by = "pseudotime",
label_cell_groups = F,
label_branch_points = T,
label_roots = F,
label_leaves = F
)
plot_cells(cds,
color_cells_by = "pseudotime",
label_cell_groups = F,
label_groups_by_cluster = T,
label_branch_points = T,
label_roots = F,
label_leaves = F
)
plot_cells(cds,
color_cells_by = "pseudotime",
label_cell_groups = F,
label_branch_points = F,
label_leaves = F
)
plot_cells(cds,
color_cells_by = "pseudotime",
label_cell_groups = F,
label_groups_by_cluster = T,
label_branch_points = F,
label_roots = F,
label_leaves = F
)
cds_sub <- choose_graph_segments(cds)
cds_sub <- choose_graph_segments(cds)
plot_cells(cds_sub,
color_cells_by = "pseudotime",
label_cell_groups=FALSE,
label_leaves=TRUE,
label_branch_points=TRUE,
graph_label_size=1.5)
View(cds_sub)
plot_cells(cds_sub, color_cells_by = "pseudotime", label_branch_points = FALSE, label_leaves = FALSE)
ILCsNKCD8 <- subset(x = LymphocyteClusters, idents = c("EM CD4 T cell", "Naive CD4 T cell", "Treg", "Late EM CD4 T cell", "Th17 cell", "B cell"), invert = TRUE)
cds <- SeuratWrappers::as.cell_data_set(ILCsNKCD8)
cds_CD8NKILC <- SeuratWrappers::as.cell_data_set(ILCsNKCD8)
cds <- SeuratWrappers::as.cell_data_set(LymphocyteClusters)
cds_CD8NKILC <- cluster_cells(cds_CD8NKILC)
plot_cells(cds_CD8NKILC, show_trajectory_graph = FALSE,
color_cells_by = "partition")
cds_CD8NKILC <- learn_graph(cds_CD8NKILC, use_partition = FALSE)
cds_CD8NKILC <- order_cells(cds_CD8NKILC)
cds_CD8NKILC <- order_cells(cds_CD8NKILC)
plot_cells(cds_CD8NKILC,
color_cells_by = "pseudotime",
label_cell_groups=FALSE,
label_leaves=TRUE,
label_branch_points=TRUE,
graph_label_size=1.5)
cds_sub <- choose_graph_segments(cds_CD8NKILC)
plot_cells(cds_sub,
color_cells_by = "pseudotime",
label_cell_groups=FALSE,
label_leaves=TRUE,
label_branch_points=TRUE,
graph_label_size=1.5)
cds_sub <- choose_graph_segments(cds_CD8NKILC)
plot_cells(cds_sub, show_trajectory_graph = FALSE,
color_cells_by = "partition")
plot_cells(cds_sub, label_groups_by_cluster=FALSE,  color_cells_by = "cell.type")
cds_sub <- reduce_dimension(cds_sub)
cds_CD8NKILC <- reduce_dimension(cds_CD8NKILC)
cds_sub <- reduce_dimension(cds_sub, reduction_method = "PCA")
cds <- order_cells(cds)
cds <- SeuratWrappers::as.cell_data_set(LymphocyteClusters)
cds <- cluster_cells(cds)
# we want to color the cells by partition (i.e. each cell type CD4, CD8, etc.)
plot_cells(cds, show_trajectory_graph = FALSE,
color_cells_by = "partition")
cds <- learn_graph(cds, use_partition = FALSE)
cds <- order_cells(cds)
cds <- order_cells(cds)
plot_cells(cds, color_cells_by = "pseudotime", label_branch_points = FALSE, label_leaves = FALSE)
DotPlot_scCustom(seurat_object = gdNKcellsubset, features = c("CD3E", "CD3D", "CD3G", "CD69", "KIT", "GATA3", "RORC", "AHR", "KLRB1", "CD9", "LRP1", "PTGDR2", "TRDC", "TRGC1", "TRGC2", "TRAC", "TRBC1", "TRBC2", "GNLY", "FCGR3A", "EOMES", "CXCR4", "NCAM1", "GZMB", "ID2", "CD276", "KLRD1"),flip_axes = TRUE, x_lab_rotate = TRUE, cols = c("blue", "red"))
library(scCustomize)
# dot plot of genes grouped by celltype
DotPlot_scCustom(seurat_object = LymphocyteClusters, features = c("PTPRC", "CD3E", "CD3D", "CD3G", "CD4", "CD8A", "CD8B", "CD69", "KIT", "GATA3", "RORC", "AHR", "KLRB1", "CD9", "LRP1", "PTGDR2", "TRDC", "TRGC1", "TRGC2", "TRAC", "TRBC1", "TRBC2", "GNLY", "FCGR3A", "EOMES", "CXCR4", "NCAM1", "GZMB", "ID2", "KLRD1", "IL23R", "CD28"),  flip_axes = TRUE, x_lab_rotate = TRUE, group.by = "celltype", cols = c("blue", "red"))
LymphocyteClusters$celltype <- Idents(LymphocyteClusters)
# dot plot of genes grouped by celltype
DotPlot_scCustom(seurat_object = LymphocyteClusters, features = c("PTPRC", "CD3E", "CD3D", "CD3G", "CD4", "CD8A", "CD8B", "CD69", "KIT", "GATA3", "RORC", "AHR", "KLRB1", "CD9", "LRP1", "PTGDR2", "TRDC", "TRGC1", "TRGC2", "TRAC", "TRBC1", "TRBC2", "GNLY", "FCGR3A", "EOMES", "CXCR4", "NCAM1", "GZMB", "ID2", "KLRD1", "IL23R", "CD28"),  flip_axes = TRUE, x_lab_rotate = TRUE, group.by = "celltype", cols = c("blue", "red"))
# dot plot of genes grouped by celltype
DotPlot_scCustom(seurat_object = LymphocyteClusters, features = c("PTPRC", "CD3E", "CD3D", "CD3G", "CD4", "CD8A", "CD8B", "CD69", "KIT", "GATA3", "RORC", "AHR", "KLRB1", "CD9", "LRP1", "PTGDR2", "TRDC", "TRGC1", "TRGC2", "TRAC", "TRBC1", "TRBC2", "GNLY", "FCGR3A", "EOMES", "CXCR4", "NCAM1", "GZMB", "ID2", "KLRD1", "IL23R", "CD28"),  flip_axes = TRUE, x_lab_rotate = TRUE, group.by = "celltype", cols = c("blue", "red"))
new.cluster.ids <- c("EM CD4 T cell", "Naive CD4 T cell", "EM CD4 T cell", "Treg", "Late EM CD4 T cell", "gd T cell / ILC ??", "Stem-like CD8 T cell", "B cell", "Late EM CD8 / gd T cell ??", "NK cell", "Th17 cell")
names(new.cluster.ids) <- levels(LymphocyteClusters)
LymphocyteClusters <- RenameIdents(LymphocyteClusters, new.cluster.ids)
# View the new UMAP with the updated clusters!
DimPlot(LymphocyteClusters, reduction = 'umap', label = TRUE, pt.size = 0.4)
# dot plot of genes grouped by celltype
DotPlot_scCustom(seurat_object = LymphocyteClusters, features = c("PTPRC", "CD3E", "CD3D", "CD3G", "CD4", "CD8A", "CD8B", "CD69", "KIT", "GATA3", "RORC", "AHR", "KLRB1", "CD9", "LRP1", "PTGDR2", "TRDC", "TRGC1", "TRGC2", "TRAC", "TRBC1", "TRBC2", "GNLY", "FCGR3A", "EOMES", "CXCR4", "NCAM1", "GZMB", "ID2", "KLRD1", "IL23R", "CD28"),  flip_axes = TRUE, x_lab_rotate = TRUE, cols = c("blue", "red"))
# reorder clusters
LymphocyteClusters@active.ident <- factor(LymphocyteClusters@active.ident,
levels=c("Naive CD4 T cell",
"EM CD4 T cell",
"Late EM CD4 T cell",
"Treg",
"Th17 cell",
"Stem-like CD8 T cell",
"EM CD8 T cell",
"Late EM CD8 / gd T cell ??",
"gd T cell / ILC ??",
"NK cell",
"B cell")
)
LymphocyteClusters$celltype <- Idents(LymphocyteClusters)
# dot plot of genes grouped by celltype
DotPlot_scCustom(seurat_object = LymphocyteClusters, features = c("PTPRC", "CD3E", "CD3D", "CD3G", "CD4", "CD8A", "CD8B", "CD69", "KIT", "GATA3", "RORC", "AHR", "KLRB1", "CD9", "LRP1", "PTGDR2", "TRDC", "TRGC1", "TRGC2", "TRAC", "TRBC1", "TRBC2", "GNLY", "FCGR3A", "EOMES", "CXCR4", "NCAM1", "GZMB", "ID2", "KLRD1", "IL23R", "CD28"),  flip_axes = TRUE, x_lab_rotate = TRUE, cols = c("blue", "red"))
# Time to load the data in our global environment!
load("/Users/tamto/Desktop/soupx62.myeloid2.Rdata")
# View gene expression on UMAP
FeaturePlot(object = myeloids, features = c("S100A8", "S100A9"), cols = c("gray", "red"))
# View gene expression on UMAP
FeaturePlot(object = myeloids, features = c("S100A8", "S100A9"), cols = c("gray", "red"))
# View gene expression on UMAP
FeaturePlot(object = soupx62.myeloid2, features = c("S100A8", "S100A9"), cols = c("gray", "red"))
# Dot plot of genes grouped by celltype, showing lesional and nonlesional
DotPlot(object = soupx62.myeloid2, features = c("S100A8", "S100A9"), group.by = "celltype", split.by = "stim", cols = c("red", "blue"))
# Dot plot of genes grouped by celltype, showing lesional and nonlesional
DotPlot(object = soupx62.myeloid2, features = c("IRAK1", "TRAF6", "NFKB1"), group.by = "celltype", split.by = "stim", cols = c("red", "blue"))
DotPlot(object = soupx62.myeloid2, features = c("IRAK1", "TRAF6", "NFKB1"), group.by = "celltype", cols = c("blue", "red"))
# Dot plot of gene grouped by lesional or nonlesional
DotPlot(object = soupx62.myeloid2, features = c("IRAK1", "TRAF6", "NFKB1"),  group.by = "stim", cols = c("blue", "red"))
load("/Users/tamto/Desktop/soupx62")
load("/Users/tamto/Desktop/acne_singCell.Rdata")
# Dot plot of genes grouped by celltype, showing lesional and nonlesional
DotPlot(object = single_cell_object, features = c("IRAK1", "TRAF6", "NFKB1"), group.by = "celltype", split.by = "stim", cols = c("red", "blue"))
DotPlot(object = single_cell_object, features = c("IRAK1", "TRAF6", "NFKB1"), group.by = "celltype", cols = c("blue", "red"))
# Dot plot of gene grouped by lesional or nonlesional
DotPlot(object = soupx62.myeloid2, features = c("IRAK1", "TRAF6", "NFKB1"),  group.by = "stim", cols = c("blue", "red"))
# Dot plot of gene grouped by lesional or nonlesional
DotPlot(object = single_cell_object, features = c("IRAK1", "TRAF6", "NFKB1"),  group.by = "stim", cols = c("blue", "red"))
VlnPlot(object = single_cell_object, features = c("IRAK1", "TRAF6", "NFKB1"), split.by = "stim", pt.size = .001)
DotPlot(object = single_cell_object, features = c("IRAK1", "TRAF6", "NFKB1"), group.by = "celltype", cols = c("blue", "red"))
DotPlot_scCustom(seurat_object = single_cell_object, features = c("IRAK1", "TRAF6", "NFKB1"),  flip_axes = TRUE, x_lab_rotate = TRUE, cols = c("blue", "red"))
DotPlot(object = single_cell_object, features = c("IRAK1", "TRAF6", "NFKB1"), group.by = "celltype", cols = c("blue", "red"))
# Dot plot of genes grouped by celltype, showing lesional and nonlesional
DotPlot(object = single_cell_object, features = c("IRAK1", "TRAF6", "NFKB1"), group.by = "celltype", split.by = "stim", cols = c("red", "blue"))
# Dot plot of gene grouped by lesional or nonlesional
DotPlot(object = single_cell_object, features = c("IRAK1", "TRAF6", "NFKB1"),  group.by = "stim", cols = c("blue", "red"))
DotPlot_scCustom(seurat_object = single_cell_object, features = c("IRAK1", "TRAF6"),  flip_axes = TRUE, x_lab_rotate = TRUE, cols = c("blue", "red"))
# Dot plot of gene grouped by lesional or nonlesional
DotPlot(object = single_cell_object, features = c("IRAK1", "TRAF6"),  group.by = "stim", cols = c("blue", "red"))
# Dot plot of gene grouped by lesional or nonlesional
DotPlot(object = single_cell_object, features = c("IRAK1", "TRAF6", "1L17A"),  group.by = "stim", cols = c("blue", "red"))
# Dot plot of gene grouped by lesional or nonlesional
DotPlot(object = single_cell_object, features = c("IRAK1", "TRAF6", "IL17A"),  group.by = "stim", cols = c("blue", "red"))
# Dot plot of genes grouped by celltype, showing lesional and nonlesional
DotPlot(object = single_cell_object, features = c("IRAK1", "TRAF6"), group.by = "celltype", split.by = "stim", cols = c("red", "blue"))
DotPlot(object = single_cell_object, features = c("IRAK1", "TRAF6"), group.by = "celltype", cols = c("blue", "red"))
# View gene expression on UMAP
FeaturePlot(object = soupx62.myeloid2, features = c("S100A8", "S100A9"), cols = c("gray", "red"))
# View gene expression on UMAP
FeaturePlot(object = soupx62.myeloid2, features = c("IRAK1", "TRAF6"), cols = c("gray", "red"))
FeaturePlot(object = soupx62.myeloid2, features = c("IRAK1", "TRAF6"))
# View UMAP
DimPlot(object = soupx62.myeloid2, reduction = "umap", label = TRUE, label.size = 3.5) +
FeaturePlot(object = soupx62.myeloid2, features = c("IRAK1", "TRAF6"))
# View UMAP
DimPlot(object = single_cell_object, reduction = "umap", label = TRUE, label.size = 3.5) +
FeaturePlot(object = single_cell_object, features = c("IRAK1", "TRAF6"))
# Dot plot of gene grouped by lesional or nonlesional
DotPlot(object = LymphocyteClusters, features = c("IRAK1", "TRAF6", "IL17A"),  group.by = "stim", cols = c("blue", "red"))
DotPlot(object = LymphocyteClusters, features = c("IRAK1", "TRAF6"), group.by = "celltype", cols = c("blue", "red"))
# Dot plot of genes grouped by celltype, showing lesional and nonlesional
DotPlot(object = LymphocyteClusters, features = c("IRAK1", "TRAF6"), group.by = "celltype", split.by = "stim", cols = c("red", "blue"))
DotPlot_scCustom(seurat_object = LymphocyteClusters, features = c("IRAK1", "TRAF6"),  flip_axes = TRUE, x_lab_rotate = TRUE, cols = c("blue", "red"))
DotPlot(object = LymphocyteClusters, features = c("IRAK1", "TRAF6"), group.by = "celltype", cols = c("blue", "red"))
DotPlot(object = LymphocyteClusters, features = c("IRAK1", "TRAF6"), group.by = "celltype", cols = c("blue", "red"))
# Dot plot of genes grouped by celltype, showing lesional and nonlesional
DotPlot(object = LymphocyteClusters, features = c("IRAK1", "TRAF6"), group.by = "celltype", split.by = "stim", cols = c("red", "blue"))
VlnPlot(object = LymphocyteClusters, features = c("IRAK1", "TRAF6"), split.by = "stim", pt.size = .001)
# Dot plot of gene grouped by lesional or nonlesional
DotPlot(object = LymphocyteClusters, features = c("IRAK1", "TRAF6", "IL17A"),  group.by = "stim", cols = c("blue", "red"))
# Dot plot of genes grouped by celltype, showing lesional and nonlesional
DotPlot(object = single_cell_object, features = c("MIR146A"), group.by = "celltype", split.by = "stim", cols = c("red", "blue"))
# View UMAP
DimPlot(object = single_cell_object, reduction = "umap", label = TRUE, label.size = 3.5)
# View gene expression on UMAP
FeaturePlot(object = soupx62.myeloid2, features = c("IRAK1", "TRAF6"), cols = c("gray", "red"))
# Dot plot of gene grouped by lesional or nonlesional
DotPlot(object = LymphocyteClusters, features = c("IRAK1", "TRAF6", "IL17A"),  group.by = "stim", cols = c("blue", "red"))
DotPlot(object = LymphocyteClusters, features = c("IRAK1", "TRAF6"), group.by = "celltype", cols = c("blue", "red"))
# Dot plot of gene grouped by lesional or nonlesional
DotPlot(object = LymphocyteClusters, features = c("IRAK1", "TRAF6", "IL17A"),  group.by = "stim", cols = c("blue", "red"))
DotPlot_scCustom(seurat_object = LymphocyteClusters, features = c("IRAK1", "TRAF6"),  flip_axes = TRUE, x_lab_rotate = TRUE, cols = c("blue", "red"))
VlnPlot(object = LymphocyteClusters, features = c("IRAK1", "TRAF6"), split.by = "stim", pt.size = .001)
# Dot plot of gene grouped by lesional or nonlesional
DotPlot(object = LymphocyteClusters, features = c("IRAK1", "TRAF6", "IL17A"),  group.by = "stim", cols = c("blue", "red"))
# Dot plot of genes grouped by celltype, showing lesional and nonlesional
DotPlot(object = single_cell_object, features = c("LRRC15"), group.by = "celltype", split.by = "stim", cols = c("red", "blue"))
DotPlot(object = LymphocyteClusters, features = c("LRRC15"), group.by = "celltype", cols = c("blue", "red"))
# Dot plot of gene grouped by lesional or nonlesional
DotPlot(object = LymphocyteClusters, features = c("LRRC15"),  group.by = "stim", cols = c("blue", "red"))
# Dot plot of gene grouped by lesional or nonlesional
DotPlot(object = single_cell_object, features = c("LRRC15"),  group.by = "stim", cols = c("blue", "red"))
# Dot plot of gene grouped by lesional or nonlesional
DotPlot(object = LymphocyteClusters, features = c("LRRC15"),  group.by = "stim", cols = c("blue", "red"))
VlnPlot(object = LymphocyteClusters, features = c("LRRC15"), split.by = "stim", pt.size = .001)
VlnPlot(object = single_cell_object, features = c("LRRC15"), split.by = "stim", pt.size = .001)
# Dot plot of genes grouped by celltype, showing lesional and nonlesional
DotPlot(object = single_cell_object, features = c("CCN2", "SERPINE1", "MMP1", "TGFB1", "ACT2"), group.by = "celltype", split.by = "stim", cols = c("red", "blue"))
DotPlot_scCustom(seurat_object = single_cell_object, features = c("CCN2", "SERPINE1", "MMP1", "TGFB1", "ACT2"),  flip_axes = TRUE, x_lab_rotate = TRUE, cols = c("blue", "red"))
DotPlot_scCustom(seurat_object = LymphocyteClusters, features = c("CCN2", "SERPINE1", "MMP1", "TGFB1", "ACT2"),  flip_axes = TRUE, x_lab_rotate = TRUE, cols = c("blue", "red"))
DotPlot_scCustom(seurat_object = soupx62.myeloid2, features = c("CCN2", "SERPINE1", "MMP1", "TGFB1", "ACT2"),  flip_axes = TRUE, x_lab_rotate = TRUE, cols = c("blue", "red"))
VlnPlot(object = single_cell_object, features = c("CCN2", "SERPINE1", "MMP1", "TGFB1", "ACT2"), split.by = "stim", pt.size = .001)
# Dot plot of genes grouped by celltype, showing lesional and nonlesional
DotPlot(object = LymphocyteClusters, features = c("CCN2", "SERPINE1", "MMP1", "TGFB1", "ACT2"), group.by = "celltype", split.by = "stim", cols = c("red", "blue"))
# Dot plot of gene grouped by lesional or nonlesional
DotPlot(object = LymphocyteClusters, features = c("CCN2", "SERPINE1", "MMP1", "TGFB1", "ACT2"),  group.by = "stim", cols = c("blue", "red"))
# Dot plot of gene grouped by lesional or nonlesional
DotPlot(object = LymphocyteClusters, features = c("SERPINE1", "MMP1"),  group.by = "stim", cols = c("blue", "red"))
# Dot plot of gene grouped by lesional or nonlesional
DotPlot(object = single_cell_object, features = c("SERPINE1", "MMP1"),  group.by = "stim", cols = c("blue", "red"))
# Dot plot of gene grouped by lesional or nonlesional
DotPlot(object = single_cell_object, features = c("SERPINE1", "MMP1", "TGFB1"),  group.by = "stim", cols = c("blue", "red"))
DotPlot(object = soupx62.myeloid2, features = c("SERPINE1", "MMP1", "TGFB1"), group.by = "celltype", cols = c("blue", "red"))
DotPlot(object = soupx62.myeloid2, features = c("SERPINE1", "MMP1"), group.by = "celltype", cols = c("blue", "red"))
DotPlot(object = LymphocyteClusters, features = c("SERPINE1", "MMP1"), group.by = "celltype", cols = c("blue", "red"))
# Dot plot of genes grouped by celltype, showing lesional and nonlesional
DotPlot(object = LymphocyteClusters, features = c("SERPINE1", "MMP1"), group.by = "celltype", split.by = "stim", cols = c("red", "blue"))
# Dot plot of genes grouped by celltype, showing lesional and nonlesional
DotPlot(object = single_cell_object, features = c("SERPINE1", "MMP1"), group.by = "celltype", split.by = "stim", cols = c("red", "blue"))
# Dot plot of genes grouped by celltype, showing lesional and nonlesional
DotPlot(object = soupx62.myeloid2, features = c("SERPINE1", "MMP1"), group.by = "celltype", split.by = "stim", cols = c("red", "blue"))
# Dot plot of genes grouped by celltype, showing lesional and nonlesional
DotPlot(object = soupx62.myeloid2, features = c("PTGS2"), group.by = "celltype", split.by = "stim", cols = c("red", "blue"))
# Dot plot of genes grouped by celltype, showing lesional and nonlesional
DotPlot(object = single_cell_object, features = c("PTGS2"), group.by = "celltype", split.by = "stim", cols = c("red", "blue"))
DotPlot(object = single_cell_object, features = c("PTGS2"), group.by = "celltype", cols = c("blue", "red"))
# Dot plot of gene grouped by lesional or nonlesional
DotPlot(object = single_cell_object, features = c("PTGS2"),  group.by = "stim", cols = c("blue", "red"))
VlnPlot(object = single_cell_object, features = c("PTGS2"), split.by = "stim", pt.size = .001)
# Dot plot of genes grouped by celltype, showing lesional and nonlesional
DotPlot(object = LymphocyteClusters, features = c("CD69"), group.by = "celltype", split.by = "stim", cols = c("red", "blue"))
# Dot plot of gene grouped by lesional or nonlesional
DotPlot(object = LymphocyteClusters, features = c("CD69"),  group.by = "stim", cols = c("blue", "red"))
VlnPlot(object = LymphocyteClusters, features = c("CD69"), split.by = "stim", pt.size = .001)
# Dot plot of genes grouped by celltype, showing lesional and nonlesional
DotPlot(object = LymphocyteClusters, features = c("CD69"), group.by = "celltype", split.by = "stim", cols = c("red", "blue"))
# Dot plot of genes grouped by celltype, showing lesional and nonlesional
DotPlot(object = LymphocyteClusters, features = c("CD69", "MPO"), group.by = "celltype", split.by = "stim", cols = c("red", "blue"))
# Dot plot of genes grouped by celltype, showing lesional and nonlesional
DotPlot(object = LymphocyteClusters, features = c("CD69", "GZMB"), group.by = "celltype", split.by = "stim", cols = c("red", "blue"))
# Dot plot of genes grouped by celltype, showing lesional and nonlesional
DotPlot(object = LymphocyteClusters, features = c("CD69", "PRF1"), group.by = "celltype", split.by = "stim", cols = c("red", "blue"))
# Dot plot of genes grouped by celltype, showing lesional and nonlesional
DotPlot(object = LymphocyteClusters, features = c("PADI4"), group.by = "celltype", split.by = "stim", cols = c("red", "blue"))
# Dot plot of genes grouped by celltype, showing lesional and nonlesional
DotPlot(object = LymphocyteClusters, features = c("GSDMD"), group.by = "celltype", split.by = "stim", cols = c("red", "blue"))
# Dot plot of gene grouped by lesional or nonlesional
DotPlot(object = LymphocyteClusters, features = c("GSDMD"),  group.by = "stim", cols = c("blue", "red"))
VlnPlot(object = LymphocyteClusters, features = c("GSDMD"), split.by = "stim", pt.size = .001)
DotPlot_scCustom(seurat_object = LymphocyteClusters, features = c("PTPRC", "CD3E", "CD3D", "CD3G", "CD4", "CD8A", "CD8B", "CD69", "KIT", "GATA3", "RORC", "AHR", "KLRB1", "CD9", "LRP1", "PTGDR2", "TRDC", "TRGC1", "TRGC2", "TRAC", "TRBC1", "TRBC2", "GNLY", "FCGR3A", "EOMES", "CXCR4", "NCAM1", "GZMB", "ID2", "KLRD1", "IL23R", "CD28"),  flip_axes = TRUE, x_lab_rotate = TRUE, cols = c("blue", "red"))
features <- c("PTPRC", "CD3E", "CD3G", "CD3D", "TRAC", "TRBC1", "TRBC2", "CD4", "CD28", "CCR7", "SELL", "FOXP3", "IL2RA", "IL17A", "IL26", "CXCL13", "RORC", "CD8A", "CD8B", "TCF7", "XCL1", "GZMB", "PRF1", "GNLY", "TRDC", "TRGC1", "TRGC2", "IL7R", "KIT", "CPB2", "PGLYRP2", "ICOSLG", "TNFSF4", "NCAM1", "KLRB1", "FCGR3A", "KLRD1", "TBX21", "MZB1", "JCHAIN")
DotPlot_scCustom(seurat_object = LymphocyteClusters, features = "features", flip_axes = T, x_lab_rotate = T)
genes <- c("PTPRC", "CD3E", "CD3G", "CD3D", "TRAC", "TRBC1", "TRBC2", "CD4", "CD28", "CCR7", "SELL", "FOXP3", "IL2RA", "IL17A", "IL26", "CXCL13", "RORC", "CD8A", "CD8B", "TCF7", "XCL1", "GZMB", "PRF1", "GNLY", "TRDC", "TRGC1", "TRGC2", "IL7R", "KIT", "CPB2", "PGLYRP2", "ICOSLG", "TNFSF4", "NCAM1", "KLRB1", "FCGR3A", "KLRD1", "TBX21", "MZB1", "JCHAIN")
DotPlot_scCustom(seurat_object = LymphocyteClusters, features = c("genes"), flip_axes = T, x_lab_rotate = T)
DotPlot_scCustom(seurat_object = LymphocyteClusters, features = genes, flip_axes = T, x_lab_rotate = T)
NewLymphocyteClusters <- FindNeighbors(PCALymphocyte, dims = 1:11)
PCALymphocyte <- RunPCA(soupx62.lymphocyte2, features = VariableFeatures(object = soupx62.lymphocyte2))
# Time to load the data in our global environment!
load("/Users/tamto/Desktop/soupx62.lymphocyte2.Rdata")
PCALymphocyte <- RunPCA(soupx62.lymphocyte2, features = VariableFeatures(object = soupx62.lymphocyte2))
print(PCALymphocyte[['pca']], dims = 1:15, nfeatures = 5)
VizDimLoadings(PCALymphocyte, dims = 1:15, reduction = 'pca')
DimHeatmap(PCALymphocyte, dims = 1:15, cells = 500, balanced = TRUE)
PCALymphocyte <- JackStraw(PCALymphocyte, num.replicate = 100)
PCALymphocyte <- ScoreJackStraw(PCALymphocyte, dims = 1:15)
JackStrawPlot(PCALymphocyte, dims = 1:15)
JackStrawPlot(PCALymphocyte, dims = 1:11)
ElbowPlot(PCALymphocyte)
NewLymphocyteClusters <- FindNeighbors(PCALymphocyte, dims = 1:11)
NewLymphocyteClusters <- FindClusters(PCALymphocyte, resolution = 0.5)
NewLymphocyteClusters <- FindClusters(PCALymphocyte, resolution = 0.5)
library(Seurat) # we need this to work with Seurat objects
library(tidyverse) # load the tidyverse
NewLymphocyteClusters <- FindClusters(PCALymphocyte, resolution = 0.5)
NewLymphocyteClusters <- FindNeighbors(PCALymphocyte, dims = 1:11)
NewLymphocyteClusters <- FindClusters(PCALymphocyte, resolution = 0.5)
# Now we can verify what the cluster IDs of the first 5 cells are and that we have a total of 11 clusters since that was our cut-off for cell types.
head(Idents(NewLymphocyteClusters), 5)
NewLymphocyteClusters <- RunUMAP(NewLymphocyteClusters, reduction = "pca", dims = 1:11)
DimPlot(NewLymphocyteClusters, reduction = "umap")
cluster_markers <- FindAllMarkers(NewLymphocyteClusters,
only.pos = TRUE,
min.pct = 0.25,
logfc.threshold = 0.25)
library(scCustomize)
DotPlot_scCustom(seurat_object = NewLymphocyteClusters, features = genes, flip_axes = T, x_lab_rotate = T)
VlnPlot(NewLymphocyteClusters, features = c("FOXP3"))
DotPlot(NewLymphocyteClusters, features = c("FOXP3"), cols = c("blue", "red"))
DotPlot_scCustom(seurat_object = NewLymphocyteClusters, features = genes, flip_axes = T, x_lab_rotate = T)
new.cluster.ids <- c("EM CD4 T cell", "Naive CD4 T cell", "EM CD8 T cell", "Treg", "Late EM CD4 T cell", "gd T cell / ILC ??", "Stem-like CD8 T cell", "B cell", "Late EM CD8 / gd T cell ??", "NK cell", "Th17 cell")
names(new.cluster.ids) <- levels(NewLymphocyteClusters)
NewLymphocyteClusters <- RenameIdents(NewLymphocyteClusters, new.cluster.ids)
# View the new UMAP with the updated clusters!
DimPlot(NewLymphocyteClusters, reduction = 'umap', label = TRUE, pt.size = 0.4)
# Make the new cell types the active identities.
NewLymphocyteClusters$celltype <- Idents(NewLymphocyteClusters)
# Verify each cluster and their top genes in an updated Heatmap that shows all the renamed clusters.
cluster_markers <- FindAllMarkers(NewLymphocyteClusters, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.25)
top10markers <- cluster_markers %>%
group_by(cluster) %>%
top_n(n = 10, wt = avg_log2FC)
DoHeatmap(NewLymphocyteClusters, features = top10markers$gene)
NewLymphocyteClusters@active.ident <- factor(NewLymphocyteClusters@active.ident,
levels = c("Naive CD4 T cell",
"EM CD4 T cell",
"Late EM CD4 T cell",
"Treg",
"Th17 cell",
"Stem-like CD8 T cell",
"EM CD8 T cell",
"Late EM CD8 / gd T cell ??",
"gd T cell / ILC ??",
"NK cell",
"B cell")
)
NewLymphocyteClusters$celltype <- Idents(NewLymphocyteClusters)
DoHeatmap(NewLymphocyteClusters, features = top10markers$gene)
DotPlot_scCustom(seurat_object = NewLymphocyteClusters, features = genes, flip_axes = T, x_lab_rotate = T)
VlnPlot(NewLymphocyteClusters, features, stack = TRUE, sort = TRUE, flip = TRUE) +
theme(legend.position = "none")
VlnPlot(NewLymphocyteClusters, genes, stack = TRUE, sort = TRUE, flip = TRUE) +
theme(legend.position = "none")
VlnPlot(NewLymphocyteClusters, features = genes, stack = TRUE, sort = TRUE, flip = TRUE) +
theme(legend.position = "none")
VlnPlot(NewLymphocyteClusters, features = genes, stack = TRUE, sort = TRUE, flip = TRUE)
VlnPlot(LymphocyteClusters, features, stack = TRUE, sort = TRUE, flip = TRUE) +
theme(legend.position = "none")
features <- c("CCR7", "CD62L", "FOXP3", "IL2RA", "MZB1", "JCHAIN", "FCGR3A", "NKG7", "TRDC", "TRGC1", "KLRC1", "RORC", "IL17A", "IL26", "CXCL13", "CD4", "CD8A", "GZMB", "IFNG", "TCF7", "XCL1", "PRF1", "CD28", "KLRG1", "CD109", "FCRL5", "PDCD1LG2", "TIGIT")
VlnPlot(LymphocyteClusters, features, stack = TRUE, sort = TRUE, flip = TRUE) +
theme(legend.position = "none")
VlnPlot(NewLymphocyteClusters, genes, stack = TRUE, sort = TRUE, flip = TRUE)
b <- VlnPlot(NewLymphocyteClusters, genes, stack = TRUE, sort = TRUE, flip = TRUE) +
theme(legend.position = "none") + ggtitle("Genes")
VlnPlot(NewLymphocyteClusters, genes, stack = TRUE, sort = TRUE, flip = TRUE) +
theme(legend.position = "none") + ggtitle("Stacked Violin Plot")
features <- c("PTPRC", "CD3E", "CD3G", "CD3D", "TRAC", "TRBC1", "TRBC2", "CD4", "CD28", "CCR7", "SELL", "FOXP3", "IL2RA", "IL17A", "IL26", "CXCL13", "RORC", "CD8A", "CD8B", "TCF7", "XCL1", "GZMB", "PRF1", "GNLY", "TRDC", "TRGC1", "TRGC2", "IL7R", "KIT", "CPB2", "PGLYRP2", "ICOSLG", "TNFSF4", "NCAM1", "KLRB1", "FCGR3A", "KLRD1", "TBX21", "MZB1", "JCHAIN")
VlnPlot(NewLymphocyteClusters, genes, stack = TRUE, sort = TRUE, flip = TRUE) +
theme(legend.position = "none") + ggtitle("Stacked Violin Plot")
DotPlot_scCustom(seurat_object = NewLymphocyteClusters, features = genes, flip_axes = T, x_lab_rotate = T)
save(NewLymphocyteClusters, file = "NewLymphocyteClusters.Rdata")
install.packages(‘tinytex’)
install.packages("tinytex")
library(tinytex)
tinytex::install_tinytex()
detach("package:tinytex", unload = TRUE)
library(tinytex)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) # load the tidyverse
library(Seurat) # we need this to work with Seurat objects
library(data.table) # used to convert df to data table
library(scCustomize) # helps with visualization and aesthetics of single-cell data
library(ggrepel) # helps with text label positioning
# Check the working directory.
getwd()
# Setting the wd to where the file is located (in this case it's saved on my desktop).
setwd("/Users/tamto/Documents/GitHub/MolecularBiologyProjects/Projects/Project_AcneGraphicalAnalyses")
# Time to load the data in our global environment.
load("/Users/tamto/Desktop/NewLymphocyteClusters.Rdata")
# We can first view our object to know what we can work with in our analyses.
view(NewLymphocyteClusters)
# Look at what the active cell identities are and check the order of the levels
Idents(object = NewLymphocyteClusters)
levels(x = NewLymphocyteClusters)
# First stash the cell identity classes.
NewLymphocyteClusters[["old.ident"]] <- Idents(object = NewLymphocyteClusters)
# Now we can subset seurat object based on identity class.
CD8subset <- subset(x = NewLymphocyteClusters, idents = c("Naive CD4 T cell", "EM CD4 T cell", "Late EM CD4 T cell", "Treg", "Th17 cell", "gd T cell / ILC ??", "NK cell", "B cell"), invert = TRUE)
library(Seurat) # we need this to work with Seurat objects
# Now we can subset seurat object based on identity class.
CD8subset <- subset(x = NewLymphocyteClusters, idents = c("Naive CD4 T cell", "EM CD4 T cell", "Late EM CD4 T cell", "Treg", "Th17 cell", "gd T cell / ILC ??", "NK cell", "B cell"), invert = TRUE)
# Look at what the active cell identities are and check the order of the levels
# Idents(object = NewLymphocyteClusters)
# levels(x = NewLymphocyteClusters)
# First stash the cell identity classes.
NewLymphocyteClusters[["old.ident"]] <- Idents(object = NewLymphocyteClusters)
# Now we can subset seurat object based on identity class.
CD8subset <- subset(x = NewLymphocyteClusters, idents = c("Naive CD4 T cell", "EM CD4 T cell", "Late EM CD4 T cell", "Treg", "Th17 cell", "gd T cell / ILC ??", "NK cell", "B cell"), invert = TRUE)
# First stash the cell identity classes.
NewLymphocyteClusters[["old.ident"]] <- Idents(object = NewLymphocyteClusters)
# Now we can subset seurat object based on identity class.
CD8subset <- subset(x = NewLymphocyteClusters, idents = c("Naive CD4 T cell", "EM CD4 T cell", "Late EM CD4 T cell", "Treg", "Th17 cell", "gd T cell / ILC ??", "NK cell", "B cell"), invert = TRUE)
devtools::install_github("jinworks/CellChat")
library(CellChat)
install.packages("ComplexHeatmap")
